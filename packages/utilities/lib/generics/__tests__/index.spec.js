"use strict";

var _ = require("..");

describe('Unit test cases for Services/utility/objects.js', function () {
  describe('Unit test cases for simpleApiStoreStates', function () {
    var defaultState = {};
    var properties1 = {};
    beforeEach(function () {
      defaultState = {
        testProp: {
          loading: false,
          data: null,
          error: null
        }
      };
      properties1 = {
        loading: true
      };
    });
    it('should return a valid loading state', function () {
      expect(defaultState.testProp.loading).toBe(false);
      var result = (0, _.simpleApiStoreStates)(defaultState, 'testProp', properties1);
      var expected = {
        testProp: {
          loading: true
        }
      };
      expect(result.testProp).toBeDefined();
      expect(result.testProp.loading).toBe(expected.testProp.loading);
    });
    it('should handle wrong props', function () {
      expect(defaultState.testProp).toBeDefined();
      var result = (0, _.simpleApiStoreStates)(defaultState, 'someProps', properties1);
      var expected = {
        testProp: {
          loading: false
        }
      };
      expect(result.testProp).toBeDefined();
      expect(result.testProp.loading).toBe(expected.testProp.loading);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nZW5lcmljcy9fX3Rlc3RzX18vaW5kZXguc3BlYy5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsImRlZmF1bHRTdGF0ZSIsInByb3BlcnRpZXMxIiwiYmVmb3JlRWFjaCIsInRlc3RQcm9wIiwibG9hZGluZyIsImRhdGEiLCJlcnJvciIsIml0IiwiZXhwZWN0IiwidG9CZSIsInJlc3VsdCIsImV4cGVjdGVkIiwidG9CZURlZmluZWQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBRUFBLFFBQVEsQ0FBQyxpREFBRCxFQUFvRCxZQUFNO0FBQ2hFQSxFQUFBQSxRQUFRLENBQUMsMENBQUQsRUFBNkMsWUFBTTtBQUN6RCxRQUFJQyxZQUFZLEdBQUcsRUFBbkI7QUFDQSxRQUFJQyxXQUFXLEdBQUcsRUFBbEI7QUFDQUMsSUFBQUEsVUFBVSxDQUFDLFlBQU07QUFDZkYsTUFBQUEsWUFBWSxHQUFHO0FBQ2JHLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxPQUFPLEVBQUUsS0FERDtBQUVSQyxVQUFBQSxJQUFJLEVBQUUsSUFGRTtBQUdSQyxVQUFBQSxLQUFLLEVBQUU7QUFIQztBQURHLE9BQWY7QUFPQUwsTUFBQUEsV0FBVyxHQUFHO0FBQ1pHLFFBQUFBLE9BQU8sRUFBRTtBQURHLE9BQWQ7QUFHRCxLQVhTLENBQVY7QUFZQUcsSUFBQUEsRUFBRSxDQUFDLHFDQUFELEVBQXdDLFlBQU07QUFDOUNDLE1BQUFBLE1BQU0sQ0FBQ1IsWUFBWSxDQUFDRyxRQUFiLENBQXNCQyxPQUF2QixDQUFOLENBQXNDSyxJQUF0QyxDQUEyQyxLQUEzQztBQUNBLFVBQU1DLE1BQU0sR0FBRyw0QkFBcUJWLFlBQXJCLEVBQW1DLFVBQW5DLEVBQStDQyxXQUEvQyxDQUFmO0FBQ0EsVUFBTVUsUUFBUSxHQUFHO0FBQ2ZSLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxPQUFPLEVBQUU7QUFERDtBQURLLE9BQWpCO0FBS0FJLE1BQUFBLE1BQU0sQ0FBQ0UsTUFBTSxDQUFDUCxRQUFSLENBQU4sQ0FBd0JTLFdBQXhCO0FBQ0FKLE1BQUFBLE1BQU0sQ0FBQ0UsTUFBTSxDQUFDUCxRQUFQLENBQWdCQyxPQUFqQixDQUFOLENBQWdDSyxJQUFoQyxDQUFxQ0UsUUFBUSxDQUFDUixRQUFULENBQWtCQyxPQUF2RDtBQUNELEtBVkMsQ0FBRjtBQVdBRyxJQUFBQSxFQUFFLENBQUMsMkJBQUQsRUFBOEIsWUFBTTtBQUNwQ0MsTUFBQUEsTUFBTSxDQUFDUixZQUFZLENBQUNHLFFBQWQsQ0FBTixDQUE4QlMsV0FBOUI7QUFDQSxVQUFNRixNQUFNLEdBQUcsNEJBQXFCVixZQUFyQixFQUFtQyxXQUFuQyxFQUFnREMsV0FBaEQsQ0FBZjtBQUNBLFVBQU1VLFFBQVEsR0FBRztBQUNmUixRQUFBQSxRQUFRLEVBQUU7QUFDUkMsVUFBQUEsT0FBTyxFQUFFO0FBREQ7QUFESyxPQUFqQjtBQUtBSSxNQUFBQSxNQUFNLENBQUNFLE1BQU0sQ0FBQ1AsUUFBUixDQUFOLENBQXdCUyxXQUF4QjtBQUNBSixNQUFBQSxNQUFNLENBQUNFLE1BQU0sQ0FBQ1AsUUFBUCxDQUFnQkMsT0FBakIsQ0FBTixDQUFnQ0ssSUFBaEMsQ0FBcUNFLFFBQVEsQ0FBQ1IsUUFBVCxDQUFrQkMsT0FBdkQ7QUFDRCxLQVZDLENBQUY7QUFXRCxHQXJDTyxDQUFSO0FBc0NELENBdkNPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IHNpbXBsZUFwaVN0b3JlU3RhdGVzIH0gZnJvbSAnLi4nO1xuXG5kZXNjcmliZSgnVW5pdCB0ZXN0IGNhc2VzIGZvciBTZXJ2aWNlcy91dGlsaXR5L29iamVjdHMuanMnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdVbml0IHRlc3QgY2FzZXMgZm9yIHNpbXBsZUFwaVN0b3JlU3RhdGVzJywgKCkgPT4ge1xuICAgIGxldCBkZWZhdWx0U3RhdGUgPSB7IH07XG4gICAgbGV0IHByb3BlcnRpZXMxID0geyB9O1xuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgZGVmYXVsdFN0YXRlID0ge1xuICAgICAgICB0ZXN0UHJvcDoge1xuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgIGRhdGE6IG51bGwsXG4gICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgICAgcHJvcGVydGllczEgPSB7XG4gICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICB9O1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgdmFsaWQgbG9hZGluZyBzdGF0ZScsICgpID0+IHtcbiAgICAgIGV4cGVjdChkZWZhdWx0U3RhdGUudGVzdFByb3AubG9hZGluZykudG9CZShmYWxzZSk7XG4gICAgICBjb25zdCByZXN1bHQgPSBzaW1wbGVBcGlTdG9yZVN0YXRlcyhkZWZhdWx0U3RhdGUsICd0ZXN0UHJvcCcsIHByb3BlcnRpZXMxKTtcbiAgICAgIGNvbnN0IGV4cGVjdGVkID0ge1xuICAgICAgICB0ZXN0UHJvcDoge1xuICAgICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgICAgZXhwZWN0KHJlc3VsdC50ZXN0UHJvcCkudG9CZURlZmluZWQoKTtcbiAgICAgIGV4cGVjdChyZXN1bHQudGVzdFByb3AubG9hZGluZykudG9CZShleHBlY3RlZC50ZXN0UHJvcC5sb2FkaW5nKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIGhhbmRsZSB3cm9uZyBwcm9wcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChkZWZhdWx0U3RhdGUudGVzdFByb3ApLnRvQmVEZWZpbmVkKCk7XG4gICAgICBjb25zdCByZXN1bHQgPSBzaW1wbGVBcGlTdG9yZVN0YXRlcyhkZWZhdWx0U3RhdGUsICdzb21lUHJvcHMnLCBwcm9wZXJ0aWVzMSk7XG4gICAgICBjb25zdCBleHBlY3RlZCA9IHtcbiAgICAgICAgdGVzdFByb3A6IHtcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgICBleHBlY3QocmVzdWx0LnRlc3RQcm9wKS50b0JlRGVmaW5lZCgpO1xuICAgICAgZXhwZWN0KHJlc3VsdC50ZXN0UHJvcC5sb2FkaW5nKS50b0JlKGV4cGVjdGVkLnRlc3RQcm9wLmxvYWRpbmcpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19